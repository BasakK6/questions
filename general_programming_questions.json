[
  {
    "title": "What are the 4 pillars of OOP? Explain each of them.",
    "answer": "Right now, there is no answer to this question. Our team is working on this, please wait for an update.",
    "category": "General Programming Questions"
  },
  {
    "title": "What is the difference between composition and inheritance?",
    "answer": "Right now, there is no answer to this question. Our team is working on this, please wait for an update.",
    "category": "General Programming Questions"
  },
  {
    "title": "What is an API?",
    "answer": "Sample Answer: An API (Application Programming Interface) is a set of rules and protocols that allows different software applications to communicate and interact with each other. It defines the methods and data formats that applications can use to request or exchange information and services.\n\nAPIs act as intermediaries, enabling seamless integration between different software systems, services, or platforms, regardless of their underlying implementations or programming languages. They abstract the complexities of the underlying systems, providing a simplified interface for developers to interact with.\n\nKey Characteristics of APIs:\n\n1) Interface Definition: APIs provide a clear and well-defined interface that specifies the functions, data structures, and protocols that can be used to access and interact with the underlying service or system.\n\n2) Abstraction: APIs abstract the underlying implementation details, allowing developers to use the functionality without needing to understand how it works internally. This simplifies the development process and promotes code reusability.\n\n3) Interoperability: APIs enable different applications to communicate and work together, even if they are built using different programming languages or technologies. This promotes interoperability and allows developers to leverage functionalities from various sources.\n\n4) Versioning: APIs may undergo updates or changes over time to add new features or improve performance. Versioning allows developers to use specific API versions to ensure compatibility with their applications.\n\n5) Security: APIs often include authentication and authorization mechanisms to control access and ensure that only authorized users or applications can use specific functionalities.\n\nTypes of APIs:\n\n1) Web APIs: Web APIs are APIs that are accessible over the internet and are commonly used for communication between web applications and servers. They use standard HTTP methods (GET, POST, PUT, DELETE) to interact with resources.\n\n2) Library APIs: Library APIs are sets of functions and data structures provided by programming libraries or frameworks. Developers use these APIs to access pre-built functionalities and services without having to implement them from scratch.\n\n3) Operating System APIs: Operating systems provide APIs that allow applications to interact with system resources such as file management, network communication, and hardware components.\n\n4) Hardware APIs: Hardware APIs enable software applications to interact with hardware devices, like printers, cameras, or sensors, allowing applications to control and utilize these devices.\n\nIn summary, an API is a crucial component of modern software development, enabling seamless communication and integration between different applications and systems. It abstracts complexities, promotes interoperability, and allows developers to build powerful and feature-rich applications by leveraging functionalities provided by external services and libraries.",
    "category": "General Programming Questions"
  },
  {
    "title": "Explain the SOLID principles.",
    "answer": "Right now, there is no answer to this question. Our team is working on this, please wait for an update.",
    "category": "General Programming Questions"
  }
]
